#!/bin/sh

JUL_MIRROR="https://github.com/JuliaLang/julia"


# Output lists of versions
plug_list_versions() {
    local versions=$(curl -s "$JUL_MIRROR/releases/" | \
        grep "releases/tag" | \
        grep -E -o '\/v[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)*' | \
        sed 's/\/v//g')
    echo $versions
}

# Plugin installation logic.
#
# Input:
#   $1 — plugin name (erlang, rust, ...)
#   $2 — plugin version
#   $3 — full path to the environment
plug_install() {
    local plugin_name=$1
    local version=$2
    local env_name_full=$3

    # execute in subshell
    (
        local src_path=$(nv_get_cache_full_path "$plugin_name-$version-src")

        # clone & compiling (if need)
        if [ ! -d "$src_path" ]; then
            git clone git@github.com:JuliaLang/julia.git "$src_path"
            cd "$src_path"
            git checkout v${version}
            make --jobs=$(nv_get_cpu_count)
        fi

        # copy bin into new environment
        mkdir -p "$env_name_full/bin"
        cp -r "$src_path/usr"/* "$env_name_full"
        ln -s "$env_name_full/bin/julia-readline" "$env_name_full/bin/julia"
    )
}
