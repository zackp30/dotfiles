* Awesome Window Manager
** Library imports

   #+BEGIN_SRC lua :tangle yes
     -- Standard awesome library
     local gears = require("gears")
     local awful = require("awful")
     awful.rules = require("awful.rules")
     require("awful.autofocus")
     -- Widget and layout library
     local wibox = require("wibox")
     -- Theme handling library
     local beautiful = require("beautiful")
     -- Notification library
     local naughty = require("naughty")

     -- Fancy widgets
     local blingbling = require("blingbling")

     local vicious = require("vicious")

     -- Battery
     local assault = require('assault')
   #+END_SRC

** Error recovery
*** Startup

    Handle startup errors

    #+BEGIN_SRC lua :tangle yes
      -- Check if awesome encountered an error during startup and fell back to
      -- another config (This code will only ever execute for the fallback config)
      if awesome.startup_errors then
          naughty.notify({ preset = naughty.config.presets.critical,
                           title = "Oops, there were errors during startup!",
                           text = awesome.startup_errors })
      end
    #+END_SRC

*** Runtime

    Handle runtime errors after startup

    #+BEGIN_SRC lua :tangle yes
      do
          local in_error = false
          awesome.connect_signal("debug::error", function (err)
              -- Make sure we don't go into an endless error loop
              if in_error then return end
              in_error = true

              naughty.notify({ preset = naughty.config.presets.critical,
                               title = "Oops, an error happened!",
                               text = tostring(err) })
              in_error = false
          end)
      end
    #+END_SRC

** Terminal
   This is used later as the default terminal to run.

   #+BEGIN_SRC lua :tangle yes
     terminal = "urxvt-256color"
   #+END_SRC

** Editor

   #+BEGIN_SRC lua :tangle yes
     editor = os.getenv("EDITOR") or "e"
     editor_cmd = terminal .. " -e " .. editor
   #+END_SRC

** Modkey

   Default modkey.
   Usually, Mod4 is the key with a logo between Control and Alt.
   If you do not like this or do not have such a key,
   I suggest you to remap Mod4 to another key using xmodmap or other tools.
   However, you can use another modifier like Mod1, but it may interact with others.

   #+BEGIN_SRC lua :tangle yes
     modkey = "Mod4"
   #+END_SRC

** Layouts

   Table of layouts to cover with awful.layout.inc, order matters.

   #+BEGIN_SRC lua :tangle yes
     awful.layout.layouts = {
         awful.layout.suit.tile,
         awful.layout.suit.tile.left,
         awful.layout.suit.tile.bottom,
         awful.layout.suit.tile.top,
         awful.layout.suit.fair,
         awful.layout.suit.fair.horizontal,
         awful.layout.suit.spiral,
         awful.layout.suit.spiral.dwindle,
         awful.layout.suit.floating,
         awful.layout.suit.max,
         awful.layout.suit.max.fullscreen,
         awful.layout.suit.magnifier,
         -- awful.layout.suit.corner.ne,
         -- awful.layout.suit.corner.sw,
         -- awful.layout.suit.corner.se,
     }
   #+END_SRC

** Compositor


   #+BEGIN_SRC lua :tangle yes
     awful.util.spawn_with_shell("compton &")
   #+END_SRC

** Toggle window menu

   #+BEGIN_SRC lua :tangle yes
     local function client_menu_toggle_fn()
         local instance = nil

         return function ()
             if instance and instance.wibox.visible then
                 instance:hide()
                 instance = nil
             else
                 instance = awful.menu.clients({ theme = { width = 250 } })
             end
         end
     end
   #+END_SRC

** Tags
   
   Global tag table

   #+BEGIN_SRC lua :tangle yes
     tags = {}
   #+END_SRC

   Populate tag table

   #+BEGIN_SRC lua :tangle yes
     awful.screen.connect_for_each_screen(function(s)
         -- Wallpaper
         if beautiful.wallpaper then
             local wallpaper = beautiful.wallpaper
             -- If wallpaper is a function, call it with the screen
             if type(wallpaper) == "function" then
                 wallpaper = wallpaper(s)
             end
             gears.wallpaper.maximized(wallpaper, s, true)
         end
        tags[s] = awful.tag({"ùõÄ", "Œª", "Œ£", "Œû", "Œò", "Œ¶", "Œæ", "œâ", "Œî"}, s, awful.layout.layouts[1])
     end)
   #+END_SRC

** Menus
   #+BEGIN_SRC lua :tangle yes
     mymainmenu = awful.menu({ items = { { "awesome", myawesomemenu, beautiful.awesome_icon },
                                         { "open terminal", terminal }
                                       }
                             })
   #+END_SRC
