# Prompts {{{
    # Broken or unused prompts {{{
        #PS1="%{$bg[green]}{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~ %{$reset_color%}%% "
        #PS1="%{$bg[green]%}{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~ %{$reset_color%}%% "
        #PS1="%K{blue} %K{black}%F{red}%n%k%F%K{cyan}@%K{cyan}%F{lime}%m %F{black}%~%F %f%F{green}%#%b "
    #PS1="%K{cyan}%F{black}%n%k%F%K{blue}@%K{green}%F{blue}%m %{black}%~%F %f%F{blue}%#%b "
    # }}}
    # Misc {{{
        autoload -Uz promptinit
        promptinit
        autoload -U colors && colors
    # }}}
    # Used prompts {{{
        PS1='%F{red}%K{cyan}%n%K{green}%F{black}@%F{red}%K{blue}%m %F{yellow}%~%F %b$(git_super_status)%b %F{black}%K{cyan}%#%f%k '
        RPS1='%*'
    # }}}
# }}}
# Editor {{{
    export EDITOR=/usr/local/bin/vim
# }}}
# History {{{
    HISTSIZE=5000
    SAVEHIST=5000
    HISTFILE=~/.zsh_history
    setopt histignorealldups sharehistory
# }}}
# Completion {{{
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
# }}}
# Misc {{{
    setopt interactivecomments
    if [[ -z "$STY" && -z "$TMUX" ]] && [[ "$TERM" == (xterm|rxvt|konsole)* || -n "$COLORTERM" ]]; then
        export TERM='xterm-256color'
    fi

    alias fig="showfigfonts | less"

    insert_sudo () { zle beginning-of-line; zle -U "sudo " }
    zle -N insert-sudo insert_sudo
    bindkey "^[s" insert-sudo
    TMOUT=3600
    bindkey -v
    mesg n
# }}}
# Unused stuff {{{
    #SSH_AUTH_SOCK=/tmp/ssh-qezxGbg21240/agent.21240; export SSH_AUTH_SOCK;
    #SSH_AGENT_PID=21241; export SSH_AGENT_PID;
    #echo Agent pid 21241;
    #if pgrep ssh-agent >/dev/null; then
    #    export SSH_AUTH_SOCK="/tmp/$USER.agent"
    #    export SSH_AGENT_PID="$(pgrep -u $USER -n ssh-agent)"
    #else
    #    eval "$(ssh-agent -s -a /tmp/$USER.agent)" >/dev/null
    #fi
# }}}
# Plugins {{{
    source ~/.zshrc.aliases
    source ~/.zsh/git-prompt/zshrc.sh
    . $HOME/.zsh/plugins/z/z.sh
    [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
    . $HOME/.zsh/plugins/bd/bd.zsh
    fpath=(~/.zsh/plugins/zsh-completions/src $fpath)
    PATH=$HOME/bin:$HOME/.cabal/bin:$PATH:/usr/local/texlive/2013/bin/x86_64-linux
# }}}

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
